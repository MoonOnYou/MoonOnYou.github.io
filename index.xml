<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ONYOU&#39;S  SITE</title>
    <link>https://MoonOnYou.github.io/</link>
    <description>Recent content on ONYOU&#39;S  SITE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 May 2018 21:39:23 +0900</lastBuildDate>
    
	<atom:link href="https://MoonOnYou.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Index of Kotlin</title>
      <link>https://MoonOnYou.github.io/kotlin/index-of-kotlin/</link>
      <pubDate>Sun, 13 May 2018 21:39:23 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/kotlin/index-of-kotlin/</guid>
      <description> Index  코틀린에서 쓰이는 자바 키워드도 함께 정리함  A absract as? add() and() arrayListOf() arrayOf() B break by ByteArray C continue D data &amp;nbsp; div() &amp;nbsp; E F final finally for fun G H I if in infix init instanceof interface is? it invoke() G K L M N O P Q R S T U V W X Y Z __ __ __ __ __ __ __ </description>
    </item>
    
    <item>
      <title>Some과 Any의 차이</title>
      <link>https://MoonOnYou.github.io/english/some%EA%B3%BC-any%EC%9D%98-%EC%B0%A8%EC%9D%B4/</link>
      <pubDate>Tue, 05 Jun 2018 18:41:25 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/english/some%EA%B3%BC-any%EC%9D%98-%EC%B0%A8%EC%9D%B4/</guid>
      <description>some과 any의 차이  Some : 약간, 약간의 / 좀/ 몇몇, 몇몇의 / 어떤  긍정문 Some I have some money → 나는 약간의 돈을 가지고 있어(돈좀있어) Somebody didn’t come. → 누군가는 오지 않았다
의문문 some Do you have some money? → 너 돈 좀 있어? Do you want some water? → 물 좀 원하세요? (물 조금 드릴까요?)
부정문 some I don’t like some Americans → 나는 몇몇 미국인들을 안 좋아한다</description>
    </item>
    
    <item>
      <title>에러,경고문 정리</title>
      <link>https://MoonOnYou.github.io/%EA%B8%B0%ED%83%80/%EC%97%90%EB%9F%AC%EA%B2%BD%EA%B3%A0%EB%AC%B8-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Tue, 05 Jun 2018 01:19:00 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/%EA%B8%B0%ED%83%80/%EC%97%90%EB%9F%AC%EA%B2%BD%EA%B3%A0%EB%AC%B8-%EC%A0%95%EB%A6%AC/</guid>
      <description>가끔 grdle파일을 건드리다 보면 상단에 다음과 같은 문구가 뜨는데
 gradle files have changed since last project sync. A project sync may be necessary for the IDE to work properly. : sync now
 번역하면 이렇다
 이전 프로젝트 동기화 이후에 gradle 파일이 변경되었습니다. IDE가 제대로 작동하려면 프로젝트 동기화가 필요할 수 있습니다. : 지금 동기화
 grable를 동기화 하면 .gradle파일안에 명시된 의존 라이브러리 및 패키지를 설치해준다. 빠른 동기화를 하도록 하자</description>
    </item>
    
    <item>
      <title>용어정리</title>
      <link>https://MoonOnYou.github.io/%EA%B8%B0%ED%83%80/%EC%9A%A9%EC%96%B4%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Mon, 04 Jun 2018 23:55:43 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/%EA%B8%B0%ED%83%80/%EC%9A%A9%EC%96%B4%EC%A0%95%EB%A6%AC/</guid>
      <description> 용어정리  라이브러리 : 자주 사용하는 부분 프로그램 집합
 모듈 : 프로그램을 구성하는 독립적인 부품 프로그램
 API : 앱을 개발하기 위한 규칙, 제공하는 기능을 제어할 수 있게 만든 인터페이스
  </description>
    </item>
    
    <item>
      <title>import API 정리</title>
      <link>https://MoonOnYou.github.io/android/import-api-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Mon, 04 Jun 2018 23:28:54 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/android/import-api-%EC%A0%95%EB%A6%AC/</guid>
      <description>MainActivity.kt permissionCheck()함수 구현분에서 사용한 import API 정리  Manifest  import android.Manifest
# 사용 Manifest.permission.READ_EXTERNAL_STORAGE Manifest.permission.WRITE_EXTERNAL_STORAGE Manifest.permission.CAMERA   AppCompatActivity  import android.support.v7.app.AppCompatActivity
# 사용 class MainActivity : AppCompatActivity() { ... }   Bundle  import android.os.Bundle * String값부터 다양한 parcelable type( 기본 type이 아닌 class객체를 activity 간에 주고 받기 위한 타입)까지 mapping해줌
# 사용 override fun onCreate(savedInstanceState: Bundle?) { ... }   PackageManager  import android.content.pm.PackageManager</description>
    </item>
    
    <item>
      <title>Gitignore설정하기</title>
      <link>https://MoonOnYou.github.io/%EA%B8%B0%ED%83%80/gitignore%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 04 Jun 2018 22:23:23 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/%EA%B8%B0%ED%83%80/gitignore%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</guid>
      <description> 편집기의 캐쉬파일(idea)들이 git에 같이 올라가는 것을 막기위해 git이 있는 폴더에 .&amp;ldquo;gitignore&amp;rdquo; 파일을 만들어 명시해 준다. (또는 git에 올리고 싶지 않은 파일들을 명시해포함시켜주면 된다.)   터미널 창을 열어 아래와 같이 입력하여 편집창을 연다  $ vi .gitignore   i 를 눌러 입력모드로 바꾸고 아래의 파일(캐시파일) 또는 다른 포함하고 싶지 않은 파일들을 명시하여 추가한다.  */idea/ ./idea/   esc 를 누르고 :wq 를 입력하여 저장하고 나간다.  </description>
    </item>
    
    <item>
      <title>권한설정</title>
      <link>https://MoonOnYou.github.io/android/%EA%B6%8C%ED%95%9C%EC%84%A4%EC%A0%95/</link>
      <pubDate>Mon, 04 Jun 2018 18:25:46 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/android/%EA%B6%8C%ED%95%9C%EC%84%A4%EC%A0%95/</guid>
      <description>AndroidMenifest.xml파일의 &amp;lt;menifest&amp;gt;태그 안에서 필요한 권한을 명시함과 동시에 어플리케이션 내에서 사용자에게 권한을 승인받으면 사용하고자 하는 기능을 사용 할 수 있다.  권한 설정 명시 코드 카메라 사용을 위한 권한 설정
&amp;lt;uses-permission android:name=&amp;quot;android.permission.CAMERA&amp;quot;/&amp;gt;  (찍은 사진을) 저장하기 위한 권한 설정
&amp;lt;uses-permission android:name=&amp;quot;android.permission.WRITE_EXTERNAL_STORAGE&amp;quot;/&amp;gt;  (갤러리에서 사진을) 읽기위한 권한 설정
&amp;lt;uses-permission android:name=&amp;quot;android.permission.READ_EXTERNAL_STORAGE&amp;quot;/&amp;gt;  카메라 사용을 사용자에게 알림
&amp;lt;uses-feature android:name=&amp;quot;android.hardware.camera2&amp;quot;/&amp;gt;  사용자에게 권한을 요청하는 코드 package com.example.moononyou.phonebookkotlin import android.Manifest import android.content.pm.PackageManager import android.support.v7.app.AppCompatActivity import android.</description>
    </item>
    
    <item>
      <title>Mine</title>
      <link>https://MoonOnYou.github.io/android/memo/</link>
      <pubDate>Sun, 03 Jun 2018 18:36:54 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/android/memo/</guid>
      <description>My Library 간단하게 알아둘 것  android:onClick=&amp;ldquo;함수 이름&amp;rdquo; : 해당 뷰가 클릭되었을 때 자바에서 &amp;ldquo;함수이름&amp;rdquo;과 같은 함수를 실행하라는 의미 Intent : 어떤 기능을 실행할 지 지정하기 위해 사용 setContentView() : xml레이아웃에 정의된 뷰들을 메모리 상에 객체화하는 역할을 함 AndroidManifest.xml : 앱에대한 정보를 담고있음 , 애플리케이션 구성요소나 권한 등의 정보를 정의함 xmlns:android : API에 정의된 요소를 사용한다는 의미로,하나의 레이아웃 파일에 하나 이상 있어야 한다. Context란 : 일반적으로 어떤일이 발생한 상황을 의미하는데 프로그래밍에서는 객체의 상태정보를 표현하는 경우가 많다  꿀팁 * Alt+Tab같이 Ctrl+Tab 사용가능 * setting에서 show line numbers 사용하면 에러 발생 라인을 바로 알수 있다 * 함수 클릭 후 ctrl+q 하면 API간단하게 보임 , ctrl+함수클릭하면 API자세하게 보임 * ~~()사이 클릭 후 ctrl+p 하면 파라미터 후보들이 보임~~ * ctrl+f 파일에서 단어찾기 , ctrl+shift+f 폴더에서 단어 찾기  색깔 1.</description>
    </item>
    
    <item>
      <title>Html,css</title>
      <link>https://MoonOnYou.github.io/%EA%B8%B0%ED%83%80/htmlcss/</link>
      <pubDate>Sun, 03 Jun 2018 03:33:33 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/%EA%B8%B0%ED%83%80/htmlcss/</guid>
      <description>brackets  Ctrl + D : 한줄 복사 및 생성
 모든 단축키에 Shift를 더하면 반대가 된다.
 예시  Shift + Ctrl + D // 한 줄 삭제     html  &amp;lt; img src=&amp;ldquo;&amp;rdquo; alt=&amp;ldquo;&amp;rdquo; &amp;gt;
 src : 이미지 경로(상대적경로 또는 절대적경로 또는 이미지 URL)
 alt : 이미지를 못 불러올 경우, 이 텍스트가 나온다.
 alt를 써줘야 하는 이유
 이미지가 안뜰 경우에도 검색엔진에 최적화 되기위해 프로그래머를 위해* 액박떳을 경우 사용자를 위해 시각장애인을 고려하여 웹사이트를 제작할때 (웹표준 점수가 좋아짐) ``` ***     css  클래스 및 id 생성시 이름에 숫자를 포함하는 것은 좋지 않다.</description>
    </item>
    
    <item>
      <title>코틀린 기본문법, 코틀린 특징</title>
      <link>https://MoonOnYou.github.io/kotlin/%EC%BD%94%ED%8B%80%EB%A6%B0-%EA%B8%B0%EB%B3%B8%EB%AC%B8%EB%B2%95-%EC%BD%94%ED%8B%80%EB%A6%B0-%ED%8A%B9%EC%A7%95/</link>
      <pubDate>Sat, 12 May 2018 23:53:43 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/kotlin/%EC%BD%94%ED%8B%80%EB%A6%B0-%EA%B8%B0%EB%B3%B8%EB%AC%B8%EB%B2%95-%EC%BD%94%ED%8B%80%EB%A6%B0-%ED%8A%B9%EC%A7%95/</guid>
      <description>코틀린의 변수  var  가변변수를 의미하며 variable(변수)의 뜻을 가지고 있다.  val  불변변수(상수)를 의미하며 Value(값)의 뜻을 가지고 있다. (자바의 final)    val변수가 객체를 참조하는 경우 변수 자신의 참조 값을 변경할 수 없지만 (초깃값으로 참조되는 객체외에 다른 객체를 참조할 수 없지만),참조되는 객체가 갖는 데이터는 변경이 가능하다.
 코틀린의 표현식 if, when  코틀린은 if 와 when (자바의 switch-case)를 명령어가 아닌 표현식(하나의 값을 가지는 식)으로 간주하기 때문에 대입문(=)의 오른쪽에 사용될 수 있다.</description>
    </item>
    
    <item>
      <title>코틀린 키워드 정리</title>
      <link>https://MoonOnYou.github.io/kotlin/%EC%BD%94%ED%8B%80%EB%A6%B0-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Sat, 12 May 2018 22:00:14 +0900</pubDate>
      
      <guid>https://MoonOnYou.github.io/kotlin/%EC%BD%94%ED%8B%80%EB%A6%B0-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%A0%95%EB%A6%AC/</guid>
      <description>kotlin에서의 java키워드 =============================================================
표현식 when, 자바의 swich-case kotlin에만 추가된 키워드 ========================================================
tailrec  꼬리형 재귀함수를 정의할 때 사용  is,!is  is는 자바의 instanceof로 자료형 혹은 타입을 확인하기 위한 키워드 이다.
 * 예제 ```kotlin fun main (args: Array&amp;lt;String&amp;gt;) { val str:Any = &amp;quot;문자열&amp;quot; if(str is String) { println(&amp;quot;str은 문자열입니다&amp;quot;) }else if(str is Int){ println(&amp;quot;str은 정수입니다&amp;quot;) } } ```  infix 중위함수를 정의할 때 사용
vararg 함수를 호출할 때 인자의 개수를 가변적으로 전달할 때 사용한다.</description>
    </item>
    
  </channel>
</rss>